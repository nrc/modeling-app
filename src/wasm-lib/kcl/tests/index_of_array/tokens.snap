---
source: kcl/src/simulation_tests.rs
assertion_line: 51
description: Result of tokenizing index_of_array.kcl
snapshot_kind: text
---
{
  "Ok": [
    {
      "type": "lineComment",
      "start": 0,
      "end": 32,
      "value": "// This tests indexing an array."
    },
    {
      "type": "whitespace",
      "start": 32,
      "end": 35,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 35,
      "end": 38,
      "value": "arr"
    },
    {
      "type": "whitespace",
      "start": 38,
      "end": 39,
      "value": " "
    },
    {
      "type": "operator",
      "start": 39,
      "end": 40,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 40,
      "end": 41,
      "value": " "
    },
    {
      "type": "brace",
      "start": 41,
      "end": 42,
      "value": "["
    },
    {
      "type": "number",
      "start": 42,
      "end": 44,
      "value": "90"
    },
    {
      "type": "comma",
      "start": 44,
      "end": 45,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 45,
      "end": 46,
      "value": " "
    },
    {
      "type": "number",
      "start": 46,
      "end": 48,
      "value": "91"
    },
    {
      "type": "comma",
      "start": 48,
      "end": 49,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 49,
      "end": 50,
      "value": " "
    },
    {
      "type": "number",
      "start": 50,
      "end": 52,
      "value": "92"
    },
    {
      "type": "brace",
      "start": 52,
      "end": 53,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 53,
      "end": 55,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 55,
      "end": 78,
      "value": "// Test: literal index."
    },
    {
      "type": "whitespace",
      "start": 78,
      "end": 81,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 81,
      "end": 88,
      "value": "result0"
    },
    {
      "type": "whitespace",
      "start": 88,
      "end": 89,
      "value": " "
    },
    {
      "type": "operator",
      "start": 89,
      "end": 90,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 90,
      "end": 91,
      "value": " "
    },
    {
      "type": "word",
      "start": 91,
      "end": 94,
      "value": "arr"
    },
    {
      "type": "brace",
      "start": 94,
      "end": 95,
      "value": "["
    },
    {
      "type": "number",
      "start": 95,
      "end": 96,
      "value": "1"
    },
    {
      "type": "brace",
      "start": 96,
      "end": 97,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 97,
      "end": 99,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 99,
      "end": 117,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 117,
      "end": 118,
      "value": "("
    },
    {
      "type": "word",
      "start": 118,
      "end": 125,
      "value": "result0"
    },
    {
      "type": "comma",
      "start": 125,
      "end": 126,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 126,
      "end": 127,
      "value": " "
    },
    {
      "type": "number",
      "start": 127,
      "end": 129,
      "value": "91"
    },
    {
      "type": "comma",
      "start": 129,
      "end": 130,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 130,
      "end": 131,
      "value": " "
    },
    {
      "type": "string",
      "start": 131,
      "end": 156,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 156,
      "end": 157,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 157,
      "end": 158,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 158,
      "end": 179,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 179,
      "end": 180,
      "value": "("
    },
    {
      "type": "word",
      "start": 180,
      "end": 187,
      "value": "result0"
    },
    {
      "type": "comma",
      "start": 187,
      "end": 188,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 188,
      "end": 189,
      "value": " "
    },
    {
      "type": "number",
      "start": 189,
      "end": 191,
      "value": "91"
    },
    {
      "type": "comma",
      "start": 191,
      "end": 192,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 192,
      "end": 193,
      "value": " "
    },
    {
      "type": "string",
      "start": 193,
      "end": 218,
      "value": "\"Literal property lookup\""
    },
    {
      "type": "brace",
      "start": 218,
      "end": 219,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 219,
      "end": 221,
      "value": "\n\n"
    },
    {
      "type": "lineComment",
      "start": 221,
      "end": 245,
      "value": "// Test: computed index."
    },
    {
      "type": "whitespace",
      "start": 245,
      "end": 248,
      "value": "\n\n\n"
    },
    {
      "type": "word",
      "start": 248,
      "end": 249,
      "value": "i"
    },
    {
      "type": "whitespace",
      "start": 249,
      "end": 250,
      "value": " "
    },
    {
      "type": "operator",
      "start": 250,
      "end": 251,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 251,
      "end": 252,
      "value": " "
    },
    {
      "type": "number",
      "start": 252,
      "end": 253,
      "value": "1"
    },
    {
      "type": "whitespace",
      "start": 253,
      "end": 254,
      "value": " "
    },
    {
      "type": "operator",
      "start": 254,
      "end": 255,
      "value": "+"
    },
    {
      "type": "whitespace",
      "start": 255,
      "end": 256,
      "value": " "
    },
    {
      "type": "number",
      "start": 256,
      "end": 257,
      "value": "0"
    },
    {
      "type": "whitespace",
      "start": 257,
      "end": 258,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 258,
      "end": 265,
      "value": "result1"
    },
    {
      "type": "whitespace",
      "start": 265,
      "end": 266,
      "value": " "
    },
    {
      "type": "operator",
      "start": 266,
      "end": 267,
      "value": "="
    },
    {
      "type": "whitespace",
      "start": 267,
      "end": 268,
      "value": " "
    },
    {
      "type": "word",
      "start": 268,
      "end": 271,
      "value": "arr"
    },
    {
      "type": "brace",
      "start": 271,
      "end": 272,
      "value": "["
    },
    {
      "type": "word",
      "start": 272,
      "end": 273,
      "value": "i"
    },
    {
      "type": "brace",
      "start": 273,
      "end": 274,
      "value": "]"
    },
    {
      "type": "whitespace",
      "start": 274,
      "end": 276,
      "value": "\n\n"
    },
    {
      "type": "word",
      "start": 276,
      "end": 294,
      "value": "assertLessThanOrEq"
    },
    {
      "type": "brace",
      "start": 294,
      "end": 295,
      "value": "("
    },
    {
      "type": "word",
      "start": 295,
      "end": 302,
      "value": "result1"
    },
    {
      "type": "comma",
      "start": 302,
      "end": 303,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 303,
      "end": 304,
      "value": " "
    },
    {
      "type": "number",
      "start": 304,
      "end": 306,
      "value": "91"
    },
    {
      "type": "comma",
      "start": 306,
      "end": 307,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 307,
      "end": 308,
      "value": " "
    },
    {
      "type": "string",
      "start": 308,
      "end": 334,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 334,
      "end": 335,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 335,
      "end": 336,
      "value": "\n"
    },
    {
      "type": "word",
      "start": 336,
      "end": 357,
      "value": "assertGreaterThanOrEq"
    },
    {
      "type": "brace",
      "start": 357,
      "end": 358,
      "value": "("
    },
    {
      "type": "word",
      "start": 358,
      "end": 365,
      "value": "result1"
    },
    {
      "type": "comma",
      "start": 365,
      "end": 366,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 366,
      "end": 367,
      "value": " "
    },
    {
      "type": "number",
      "start": 367,
      "end": 369,
      "value": "91"
    },
    {
      "type": "comma",
      "start": 369,
      "end": 370,
      "value": ","
    },
    {
      "type": "whitespace",
      "start": 370,
      "end": 371,
      "value": " "
    },
    {
      "type": "string",
      "start": 371,
      "end": 397,
      "value": "\"Computed property lookup\""
    },
    {
      "type": "brace",
      "start": 397,
      "end": 398,
      "value": ")"
    },
    {
      "type": "whitespace",
      "start": 398,
      "end": 399,
      "value": "\n"
    }
  ]
}
