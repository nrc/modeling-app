@no_prelude

/// The value of `pi`, Archimedes’ constant (π).
///
/// ```
/// circumference = 70
///
/// exampleSketch = startSketchOn("XZ")
///  |> circle({ center = [0, 0], radius = circumference/ (2 * PI) }, %)
///
/// example = extrude(5, exampleSketch)
/// ```
export PI = 3.14159265358979323846264338327950288_

/// The value of Euler’s number `e`.
///
/// ```
/// exampleSketch = startSketchOn("XZ")
///   |> startProfileAt([0, 0], %)
///   |> angledLine({
///     angle = 30,
///     length = 2 * E ^ 2,
///   }, %)
///   |> yLineTo(0, %)
///   |> close(%)
///
/// example = extrude(10, exampleSketch)
/// ```
export E = 2.71828182845904523536028747135266250_

/// The value of `tau`, the full circle constant (τ). Equal to 2π.
///
/// ```
/// exampleSketch = startSketchOn("XZ")
///   |> startProfileAt([0, 0], %)
///   |> angledLine({
///     angle = 50,
///     length = 10 * TAU,
///   }, %)
///   |> yLineTo(0, %)
///   |> close(%)
///
/// example = extrude(5, exampleSketch)
/// ```
export TAU = 6.28318530717958647692528676655900577_

/// Compute the cosine of a number (in radians).
///
/// ```
/// exampleSketch = startSketchOn("XZ")
///   |> startProfileAt([0, 0], %)
///   |> angledLine({
///     angle = 30,
///     length = 3 / cos(toRadians(30)),
///   }, %)
///   |> yLineTo(0, %)
///   |> close(%)
///
/// example = extrude(5, exampleSketch)
/// ```
@(impl = std_rust)
export fn cos(num: number(rad)): number(_) {}
